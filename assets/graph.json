{"nodes":[{"id":"Junit5 정리","self":"Junit5-handbook"},{"id":"[Effective Jave 3/e] Item1 생성자 대신 정적 팩터리 메서드를 고려할","self":"effective-java-3e-item-1"},{"id":"[Effective Jave 3/e] Item2 생성자에 매개변수가 많다면 빌더를 고려하라","self":"effective-java-3e-item-2"},{"id":"[Effective Jave 3/e] Item3 private 생성자나 열거 타입으로 싱글턴임을 보증하라","self":"effective-java-3e-item-3"},{"id":"[Effective Jave 3/e] Item4 인스턴스화를 막으려거든 private 생성자를 사용하라","self":"effective-java-3e-item-4"},{"id":"[Effective Jave 3/e] Item5 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라","self":"effective-java-3e-item-5"},{"id":"[Effective Jave 3/e] Item6 불필요한 객체 생성을 피하라","self":"effective-java-3e-item-6"},{"id":"[Effective Jave 3/e] Item7 다 쓴 객체 참조를 해제하라","self":"effective-java-3e-item-7"},{"id":"[우아한 테크코스 7기 프리코스] 1주차 회고","self":"woowa-precourse7-1week"},{"id":"[우아한 테크코스 7기 프리코스] 2주차 회고","self":"woowa-precourse7-2week"},{"id":"[우아한 테크코스 7기 프리코스] 3주차 회고","self":"woowa-precourse7-3week"},{"id":"[DB] ACID (원자성, 일관성, 고립성, 지속성)","self":"db-acid"},{"id":"[Spring🌱] Bean 지연 초기화, 즉시 초기화","self":"spring-lazy-eager-initialization"},{"id":"[Spring🌱] XML Configuration 📄","self":"spring-xml-configuration"},{"id":"[Review] 2024 회고","self":"2024review"},{"id":"[Spring🌱] application.properties 활용","self":"application-properties-use"},{"id":"[Spring🌱] JDBC, Spring JDBC, Spring JPA 개념과 사용법 총정리","self":"jdbc-springjdbc-jpa"},{"id":"[Spring🌱] 로깅(Logging) 완벽 가이드 📝","self":"springboot-logging"},{"id":"[DB⛁] 인덱스 이해 및 활용: Postgres을 곁들인","self":"database-indexing"},{"id":"[DB⛁] explaing 활용한 SQL 쿼리플래너, 옵티마이저 이해","self":"database-sql-query-planner-and-optimizer"},{"id":"[DB] 비트맵 인덱스 스캔 vs 인덱스 스캔 vs 테이블 스캔","self":"bitmap-index-scan-vs-index-scan-vs-table-scan"},{"id":"2025 1Q 회고","self":"retrospect-2025-1q"}],"links":[{"source":"[Effective Jave 3/e] Item1 생성자 대신 정적 팩터리 메서드를 고려할","target":"[Effective Jave 3/e] Item2 생성자에 매개변수가 많다면 빌더를 고려하라"},{"source":"[Effective Jave 3/e] Item2 생성자에 매개변수가 많다면 빌더를 고려하라","target":"[Effective Jave 3/e] Item3 private 생성자나 열거 타입으로 싱글턴임을 보증하라"},{"source":"[Effective Jave 3/e] Item3 private 생성자나 열거 타입으로 싱글턴임을 보증하라","target":"[Effective Jave 3/e] Item4 인스턴스화를 막으려거든 private 생성자를 사용하라"},{"source":"[Effective Jave 3/e] Item4 인스턴스화를 막으려거든 private 생성자를 사용하라","target":"[Effective Jave 3/e] Item5 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라"},{"source":"[Effective Jave 3/e] Item5 자원을 직접 명시하지 말고 의존 객체 주입을 사용하라","target":"[Effective Jave 3/e] Item6 불필요한 객체 생성을 피하라"},{"source":"[Effective Jave 3/e] Item6 불필요한 객체 생성을 피하라","target":"[Effective Jave 3/e] Item7 다 쓴 객체 참조를 해제하라"},{"source":"[우아한 테크코스 7기 프리코스] 1주차 회고","target":"[우아한 테크코스 7기 프리코스] 2주차 회고"},{"source":"[우아한 테크코스 7기 프리코스] 2주차 회고","target":"[우아한 테크코스 7기 프리코스] 3주차 회고"},{"source":"[DB⛁] 인덱스 이해 및 활용: Postgres을 곁들인","target":"[DB] ACID (원자성, 일관성, 고립성, 지속성)"},{"source":"[DB⛁] explaing 활용한 SQL 쿼리플래너, 옵티마이저 이해","target":"[DB⛁] 인덱스 이해 및 활용: Postgres을 곁들인"},{"source":"[DB] 비트맵 인덱스 스캔 vs 인덱스 스캔 vs 테이블 스캔","target":"[DB] ACID (원자성, 일관성, 고립성, 지속성)"}]}